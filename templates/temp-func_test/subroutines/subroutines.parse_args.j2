# j2-temp #
def parse_args():
    {%- if config.env.name == "" %}
    parser = argparse.ArgumentParser(description='{{ config.app.git_name }} func_test',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    {%- else %}
    parser = argparse.ArgumentParser(description='{{ config.app.git_name }} {{ config.env.name }} func_test',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    {%- endif %}

    parser.add_argument('-rl', '--report_level',
                        help='set report level',
                        choices=['VERBOSE', 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'],
                        default='INFO')
    parser.add_argument('-s', '--select',
                        help='select inputs by name using regular expression',
                        nargs='+',
                        default='All')

    {%- if flags.out.cdr__exists or flags.out.uri__debug %}

    parser.add_argument('--debug_out',
                        help='always create debug files of outputs',
                        action="store_true",
                        default=False)
    {%- endif %}

    group = parser.add_mutually_exclusive_group()
    group.add_argument('--clean',
                       help='delete reports and all outputs and exit',
                       action="store_true",
                       default=False)
    group.add_argument('--remove',
                       help='delete all or selected inputs, outputs and referencies and exit',
                       action="store_true",
                       default=False)
    group.add_argument('--replace',
                       help='replace all or selected referencies with previous outputs and exit',
                       action="store_true",
                       default=False)

    args = parser.parse_args()

    if args.select == 'All':
        args.select = None

    return args
# j2-temp #