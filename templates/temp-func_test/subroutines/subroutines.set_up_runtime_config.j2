# j2-temp #
def set_up_runtime_config():
    set_up_list = list()

    def append_ans(ans_dict):
        ans_already_exists = False
        for ans in set_up_list:
            if ans_dict['section'] == ans['section'] and ans_dict['parameter'] == ans['parameter']:
                ans_already_exists = True
                break
        if not ans_already_exists:
            set_up_list.append(ans_dict)

    {%- if flags.out.cdr__exists %}

    # set out_cdr
    {%- if out_cdrs[0].type == 'S1APCDRWriter' or out_cdrs[0].type == 'SIPCDRWriter' %}
    if not pathlib.Path.joinpath(program_path.parent, out_cdr['path'], input_file.stem).exists():
        pathlib.Path.joinpath(program_path.parent, out_cdr['path'], input_file.stem).mkdir(parents=True, exist_ok=True)
    {%- endif %}
    append_ans(app.set_config('{{ out_cdrs[0].type }}', 'DataPathPrimary', str(pathlib.Path.joinpath(program_path.parent, out_cdr['path'], input_file.stem))))
    append_ans(app.set_config('{{ out_cdrs[0].type }}', 'IndexPath', str(pathlib.Path.joinpath(program_path.parent, out_cdr['path'], input_file.stem))))
    {%- endif %}

    {%- if flags.out.har__exists %}

    # set out_har
    append_ans(app.set_config('S1APHARWriterRuntime', 'HAROutputBaseName', input_file.stem))
    append_ans(app.set_config('S1APHARWriterRuntime', 'HAROutputDir', str(pathlib.Path.joinpath(program_path.parent, out_har['path']))))
    {%- endif %}
	
	{%- if flags.out.s1ap_dump__exists %}

    # set out_s1ap_dump
    append_ans(app.set_config('S1APAssembler', 'DumpFile', str(pathlib.Path.joinpath(program_path.parent, out_s1ap_dump['path'], input_file.stem + '.' + out_s1ap_dump['suffix']))))
    {%- endif %}

    {%- if flags.app_test__app_config__runtime_config.file %}

    # set runtime config (file)
    {%- for item in config.app_test.app_config.runtime_config.file %}
    append_ans(app.set_config({{ item }}))
    {%- endfor %}
    {%- endif %}

    {%- if flags.app_test__app_config__runtime_config.specific_file %}

    # set runtime config (specific_file)
    {%- if flags.app_test__app_config__runtime_config.file %}
    if input_file.name in runtime_config__specific_file:
        append_ans(app.set_config(*runtime_config__specific_file[input_file.name]))
    {%- else %}
    append_ans(app.set_config(*runtime_config__specific_file[input_file.name]))
    {%- endif %}
    {%- endif %}

    return set_up_list
# j2-temp #